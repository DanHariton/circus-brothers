version: '3'

services:
  nginx:
    container_name: contact-manager_nginx
    build: docker/nginx
    ports:
      - ${NGINX_PORT}:80
    volumes:
      - './:/var/www/html/'
      - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf'
    env_file:
      - .env.local


  php:
    container_name: contact-manager_php
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    volumes:
      - './:/var/www/html/'
      - './docker/php/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini'
      - './docker/php/php.ini:/usr/local/etc/php/php.ini'
    env_file:
      - .env.local

  mysql:
    container_name: contact-manager_mysql
    image: mysql:8.0.33
    command: --default-authentication-plugin=mysql_native_password --sql_mode=""
    volumes:
      - "mysql_app:/var/lib/mysql"
    env_file:
        - .env.local
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  mysql_app: {}

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
